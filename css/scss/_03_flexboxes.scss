
/* MAIN STRUCTURE */

body {
  &.mini {

    .box:has( > .boxes) {
      margin-top: 0;
      margin-bottom: 0;
      padding: 0;
    }

    /* FLEX BOXES */
    
    $width: 
      "8" 100% 50% 33.333333% 16.666666% 8.333333%,
      "10" 100% 50% 20% 20% 10%,
      "12" 100% 50% 25% 25% 12.5%,
      "16" 100% 50% 33.333333% 16.666666% 16.666666%,
      "20" 100% 50% 50% 20% 20%,
      "25" 100% 50% 50% 25% 25%,
      "30" 100% 50% 50% 30% 30%,
      "33" 100% 50% 33.333333% 33.333333% 33.333333%,
      "40" 100% 50% 40% 40% 40%,
      "50" 100% 50% 50% 50% 50%,
      "60" 100% 50% 60% 60% 60%,
      "66" 100% 50% 66.666666% 66.666666% 66.666666%,
      "70" 100% 100% 50% 70% 70%,
      "75" 100% 100% 50% 75% 75%,
      "80" 100% 100% 50% 80% 80%,
      "88" 100% 100% 75% 75% 87.5%,
      "90" 100% 100% 80% 80% 90%,
      "100" 100% 100% 100% 100% 100%,
    ;

    $breakpoints:
      'sm' $screen-sm-min,
      'md' $screen-md-min,
      'lg' $screen-lg-min,
      'xl' $screen-xl-min,
      'xxl' $screen-xxl-min,
    ;

    .boxes {
      display: flex;
      flex-flow: row wrap;
      position: relative;
      align-items: flex-start;
      align-content: flex-start;

      margin: 0 calc(var(--margin) * -1);
      width: calc(100% + (var(--margin) * 2));

      .box {

        position: relative;

        margin: calc(var(--margin) * 1);
        padding: calc(var(--padding) * 1);

        @include width(auto);
        
        @each $widthLabel, $widthPercentageSM, $widthPercentageMD, $widthPercentageLG, $widthPercentageXL, $widthPercentageXXL in $width {
          &-#{$widthLabel} {
            @include width( calc( $widthPercentageSM - (var(--margin) * 2) ) );
            @include sm {
              @include width( calc( $widthPercentageMD - (var(--margin) * 2) ) );
            }
            @include md {
              @include width( calc( $widthPercentageLG - (var(--margin) * 2) ) );
            }
            @include lg {
              @include width( calc( $widthPercentageXL - (var(--margin) * 2) ) );
            }
            @include xl {
              @include width( calc( $widthPercentageXXL - (var(--margin) * 2) ) );
            }
          }
        }

        @each $breakpoint, $screenSize in $breakpoints {
          &-#{$breakpoint} {
            @media (min-width: #{$screenSize}) {
              @each $widthLabel, $widthPercentage in $width {
                &-#{$widthLabel} {
                  @include width( calc( $widthPercentage - (var(--margin) * 2) ) );
                }
              }
            }
          }
        }

      }
    }

    

    .flex, .d-flex, .display-flex {
      display: flex!important;
      &-sm {
        @include sm {
          display: flex!important;
        }
      }
      &-md {
        @include md {
          display: flex!important;
        }
      }
      &-lg {
        @include lg {
          display: flex!important;
        }
      }
      &-xl {
        @include xl {
          display: flex!important;
        }
      }
      &-xxl {
        @include xxl {
          display: flex!important;
        }
      }
    }
    .block, .d-block, .display-block {
      display: block!important;
      &-sm {
        @include sm {
          display: block!important;
        }
      }
      &-md {
        @include md {
          display: block!important;
        }
      }
      &-lg {
        @include lg {
          display: block!important;
        }
      }
      &-xl {
        @include xl {
          display: block!important;
        }
      }
      &-xxl {
        @include xxl {
          display: block!important;
        }
      }
    }
    .inline-block, .d-inline-block, .display-inline-block {
      display: inline-block!important;
      &-sm {
        @include sm {
          display: inline-block!important;
        }
      }
      &-md {
        @include md {
          display: inline-block!important;
        }
      }
      &-lg {
        @include lg {
          display: inline-block!important;
        }
      }
      &-xl {
        @include xl {
          display: inline-block!important;
        }
      }
      &-xxl {
        @include xxl {
          display: inline-block!important;
        }
      }
    }
    .none, .d-none, .display-none {
      display: none!important;
      &-sm {
        @include sm {
          display: none!important;
        }
      }
      &-md {
        @include md {
          display: none!important;
        }
      }
      &-lg {
        @include lg {
          display: none!important;
        }
      }
      &-xl {
        @include xl {
          display: none!important;
        }
      }
      &-xxl {
        @include xxl {
          display: none!important;
        }
      }
    }

    $orders: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
    .order {
      @each $order in $orders {
        &-#{$order} {
          order: #{$order};
        }
      }
      &-sm {
        @include sm {
          @each $order in $orders {
            &-#{$order} {
              order: #{$order};
            }
          }
        }
      }
      &-md {
        @include md {
          @each $order in $orders {
            &-#{$order} {
              order: #{$order};
            }
          }
        }
      }
      &-lg {
        @include lg {
          @each $order in $orders {
            &-#{$order} {
              order: #{$order};
            }
          }
        }
      }
      &-xl {
        @include xl {
          @each $order in $orders {
            &-#{$order} {
              order: #{$order};
            }
          }
        }
      }
      &-xxl {
        @include xxl {
          @each $order in $orders {
            &-#{$order} {
              order: #{$order};
            }
          }
        }
      }
    }

    $flex: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
    .flex {
      @each $ratio in $flex {
        &-#{$ratio} {
          flex: #{$ratio};
        }
      }
      &-direction {
        &-row {
          flex-direction: row!important;
        }
        &-row-rev, &-row-reverse {
          flex-direction: row-reverse!important;
        }
        &-col, &-column {
          flex-direction: column!important;
        }
        &-col-rev, &-col-reverse, &-column-rev, &-column-reverse {
          flex-direction: column-reverse!important;
        }
      }

      &-wrap {
        flex-wrap: wrap!important;
      }
      &-no-wrap, &-nowrap {
        flex-wrap: nowrap!important;
      }

      &-flow {
        &-row {
          &-wrap {
            flex-flow: row wrap;
          }
          &-nowrap {
            flex-flow: row nowrap;
          }
        }
        &-column {
          &-wrap {
            flex-flow: column wrap;
          }
          &-nowrap {
            flex-flow: column nowrap;
          }
        }
      }
      
    }

    .justify-content {
      &-start {
        justify-content: flex-start!important;
      }
      &-end {
        justify-content: flex-end!important;
      }
      &-center {
        justify-content: center!important;
      }
      &-between {
        justify-content: space-between!important;
      }
      &-around {
        justify-content: space-around!important;
      }
    }
    .align-content {
      &-start {
        align-content: flex-start!important;
      }
      &-end {
        align-content: flex-end!important;
      }
      &-center {
        align-content: center!important;
      }
      &-stretch {
        align-content: stretch!important;
      }
      &-between {
        align-content: space-between!important;
      }
      &-around {
        align-content: space-around!important;
      }
    }

    .align-items {
      &-start {
        align-items: flex-start!important;
      }
      &-end {
        align-items: flex-end!important;
      }
      &-center {
        align-items: center!important;
      }
      &-stretch {
        align-items: stretch!important;
      }
    }

  }
}