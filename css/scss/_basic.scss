// MAIN

$sepThickness: ('0':0, '1':1px, '2':2px, '3':3px, '4':4px, '5':5px, '10':10px);
$spaceThickness: (
  '05':calc(var(--baseline) * 0.5), 
  '1':calc(var(--baseline) * 1), 
  '15':calc(var(--baseline) * 1.5), 
  '2':calc(var(--baseline) * 2), 
  '25':calc(var(--baseline) * 2.5), 
  '3':calc(var(--baseline) * 3), 
  '4':calc(var(--baseline) * 4), 
  '5':calc(var(--baseline) * 5), 
  '6':calc(var(--baseline) * 6), 
  '10':calc(var(--baseline) * 10), 
  '20':calc(var(--baseline) * 20)
);
$ten: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

// top position
#top {
  position:absolute;
  height:0;
  width:0;
  top: 0;
}

// link to top
.top-link {
  width: calc( var(--baseline) * 4 );
  height: calc( var(--baseline) * 4 );
  background: var(--main-color);
  position: fixed!important;
  bottom: var(--padding);
  right: var(--padding);
  transition: all 0.3s ease;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  z-index: 100;
  border: 2px solid var(--white);
  display: flex;
  align-items: center;
  align-content: center;  
  &:hover {
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;
  }
  p {
    font-weight:700;
    text-align: center;
    color: var(--white);
    margin: 0;
    padding: 0;
    font-size: 1rem;
    line-height: 1;
    width: 100%;
  }
}

body.top .top-link {
  opacity: 0;
  visibility: hidden;
}

body.scroll .top-link {
  opacity: 1;
  visibility: visible;
}

// loader
.loader {
  display: block;
  width: 100%;
  height: 100%;
  position: fixed;
  top:0;
  right:0;
  bottom:0;
  left:0;
  background: var(--white);
  z-index: 109;
  opacity: 1;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  scale: 1;
  transition: transform 0.15s ease-in, opacity 0.15s ease-in, filter 0.15s ease-in;
  img.loader-logo {
    display: block;
    width: 100px;
    height: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  &.done {
    transform: translate(0, -200%);
    opacity: 0;
    filter: blur(320px);
  }
  &.gone {
    display: none;
  }
}

.space-bot-action {
  padding-bottom: calc( var(--margin) + var(--margin) + ( var(--padding) * 0.5 ) + 48px );
}

// attach to relative parent
.fit {
  position: absolute!important;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// spacing
.space-top {
  padding-top: calc((var(--menu-toggle-height)) + (var(--padding) * 2))!important;
}
.space-top-bot {
  padding-top: calc((var(--menu-toggle-height)) + (var(--padding) * 2))!important;
  padding-bottom: calc((var(--menu-toggle-height)) + (var(--padding) * 2))!important;
}
.space-bot {
  padding-bottom: calc((var(--menu-toggle-height)) + (var(--padding) * 2))!important;
}

// turn top
.turn-top {
  margin-top: calc( ( (var(--menu-toggle-height)) + (var(--margin) * 2) * -1 ))!Important;
}

// spacing
.space {
  display: block;
  width: 100%;
  height: calc(var(--baseline) * 1);
  @each $spaceHeightLabel, $spaceHeight in $spaceThickness {
    &-#{$spaceHeightLabel} {
      display: block;
      width: 100%;
      height: #{$spaceHeight};
    }
  }
}

// sep
.sep {
  display: block;
  width: 100%;
  height:0;
  @each $sepHeightLabel, $sepHeight in $sepThickness {
    &-#{$sepHeightLabel} {
      display: block;
      width: 100%;
      height: #{$sepHeight};
    }
  }
}

// hr
hr {
  border-style: solid;
  border-right: none;
  border-bottom: none;
  border-left: none;
}

// overflow HIDDEN
.oh, .overflow-hidden {
  overflow: hidden!important;
}

// fixed height
.fh {
  min-height: 100vh; // Fallback for browsers that do not support Custom Properties
  min-height: 100dvh;
}
.fhf {
  height: 100vh; // Fallback for browsers that do not support Custom Properties
  height: 100dvh;
}
.hh {
  min-height: 50vh; // Fallback for browsers that do not support Custom Properties
  min-height: 50dvh;
}
.hhf {
  height: 50vh; // Fallback for browsers that do not support Custom Properties
  height: 50dvh;
}
.h25 {
  min-height: 25vh; // Fallback for browsers that do not support Custom Properties
  min-height: 25dvh;
}
.h25f {
  height: 25vh; // Fallback for browsers that do not support Custom Properties
  height: 25dvh;
}
.h75 {
  min-height: 75vh; // Fallback for browsers that do not support Custom Properties
  min-height: 75dvh;
}
.h75f {
  height: 75vh; // Fallback for browsers that do not support Custom Properties
  height: 75dvh;
}
.h33 {
  min-height: 33.3333333vh; // Fallback for browsers that do not support Custom Properties
  min-height: 33.3333333dvh;
}
.h33f {
  height: 33.3333333vh; // Fallback for browsers that do not support Custom Properties
  height: 33.3333333dvh;
}
.h66 {
  min-height: 66.666666vh; // Fallback for browsers that do not support Custom Properties
  min-height: 66.666666dvh;
}
.h66f {
  height: 66.666666vh; // Fallback for browsers that do not support Custom Properties
  height: 66.666666dvh;
}

.square, .ratio-1-1 {
  aspect-ratio: 1/1;
}
.full-hd, .ratio-16-9 {
  aspect-ratio: 16/9;
}
.ratio-16-10 {
  aspect-ratio: 16/10;
}
.ratio-3-2 {
  aspect-ratio: 3/2;
}
.ratio-3-1 {
  aspect-ratio: 2/1;
}
.ratio-9-16 {
  aspect-ratio: 9/16;
}
.ratio-10-16 {
  aspect-ratio: 10/16;
}
.ratio-2-3 {
  aspect-ratio: 2/3;
}
.ratio-1-2 {
  aspect-ratio: 1/2;
}

.mh-100 {
  min-height: 100%;
}
.h-100 {
  height: 100%;
}

.mw-100 {
  min-width: 100%;
}
.w-100 {
  width: 100%;
}

// z-index
.z {
  @each $num in $ten {
    &-#{$num} {
      z-index: $num;
    }
  }
}

// positioning
.relative, .position-relative {
  position: relative;
}
.absolute, .position-absolute {
  position: absolute;
}
.fixed, .position-fixed {
  position: fixed;
}

// vertical positioning
.v-top {
  position: relative;
  top: 0;
  margin-top:0;
  margin-bottom:auto;
  transform: translate(0, 0%);
}
.v-cent {
  position: relative;
  top: 50%;
  margin-top:0;
  margin-bottom:0;
  transform: translate(0, -50%);
}
.v-bot {
  position: relative;
  top: 100%;
  margin-top:auto;
  margin-bottom:0;
  transform: translate(0, -100%);
}
*:has( > .v-top), *:has( > .v-cent), *:has( > .v-bot), *:has( > .vTop), *:has( > .vCent), *:has( > .vBot) {
  position:relative;
}
// box shadow
@mixin boxShadow($distance, $range, $color) {
  -webkit-box-shadow: $distance $distance $range 0 $color;
  -moz-box-shadow: $distance $distance $range 0 $color;
  box-shadow: $distance $distance $range 0 $color;
}
$boxShadowAreas: (
  '3':3px,
  's':3px,
  '5':5px,
  '10':10px,
  '15':15px,
  '20':20px,
  'l':20px,
);
$boxShadowColors: (
  'lightest':rgb( 0 0 0 / 3% ),
  'lighter':rgb( 0 0 0 / 5% ),
  'light':rgb( 0 0 0 / 7.5% ),
  'dark':rgb( 0 0 0 / 12.5% ),
  'darker': rgb( 0 0 0 / 25% ),
  'darkest': rgb( 0 0 0 / 65% ),
);
.box-shadow, .bs {
  @include boxShadow(0, 10px, rgb( 0 0 0 / 5% ));
  &-hover {
    @extend .box-shadow, .bs;
    transition: box-shadow 0.4s ease;
    &:hover {
      @include boxShadow(0, 15px, rgb( 0 0 0 / 12.5% ));
    }
  }
  @each $colorLabel, $color in $boxShadowColors {
    &-#{$colorLabel} {
      @include boxShadow(0, 10px, $color);
      @each $areaLabel, $area in $boxShadowAreas {
        &-#{$areaLabel} {
          @include boxShadow(0, $area, $color);
        }
      }
    }
  }
}

// pointer
.pointer {
  cursor: pointer;
}

