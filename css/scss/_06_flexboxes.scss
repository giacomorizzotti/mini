// FLEXBOXES

.container {

  width: 100%;
  margin: 0 auto;
  position: relative;

  max-width: calc( var(--max_screen) * 0.75 );
  @include xxl {
    max-width: calc( var(--max_screen) * 1 );
  }

  &.fw, &.full-width {
    @include width(100%);

    &.forced {
      @include width(100vw);
      left: 50%;
      transform: translate(calc(-50%), 0);
    }

  }

  &.thin {
    max-width: calc( var(--max_screen) * 0.5 );
    @include xxl {
      max-width: calc( var(--max_screen) * 0.75 );
    }
  }

  &.wide {
    max-width: calc( var(--max_screen) * 1 );
    @include xxl {
      max-width: calc( var(--max_screen) * 1.25 );
    }
  }

}

.boxes {

  display: flex;
  flex-flow: row wrap;
  position: relative;
  --gap: calc( var(--basic-gap) * 1 );
  --gap-y: calc( var(--gap) * 1 );
  --gap-x: calc( var(--gap) * 1 );
  gap: var(--gap-y) var(--gap-x); // NEW

  .box {

    position: relative;
    margin: 0; // NEW
    padding: calc(var(--padding) * 1); // NEW
    flex-basis: 100%;
    flex-basis: fit-content;
    
    @each $widthLabel, $widthPercentageSM, $widthPercentageMD, $widthPercentageLG, $widthPercentageXL, $widthPercentageXXL, $ratioSM, $ratioMD, $ratioLG, $ratioXL, $ratioXXL, $moltiplicator in $boxWidth {
      &-#{$widthLabel} {
        @extend .box;
        flex-basis: calc($widthPercentageSM + var(--gap-x) * $moltiplicator * -1); // NEW
        max-width: $widthPercentageSM;
        //flex-grow: 1;
        flex-grow: 0;

        @include sm {
          flex-basis: calc($widthPercentageMD + var(--gap-x) * $moltiplicator * -1); // NEW
          max-width: $widthPercentageMD;
        }
        @include md {
          flex-basis: calc($widthPercentageLG + var(--gap-x) * $moltiplicator * -1); // NEW
          max-width: $widthPercentageLG;
        }
        @include lg {
          flex-basis: calc($widthPercentageXL + var(--gap-x) * $moltiplicator * -1); // NEW
          max-width: $widthPercentageXL;
        }
        @include xl {
          flex-basis: calc($widthPercentageXXL + var(--gap-x) * $moltiplicator * -1); // NEW
          max-width: $widthPercentageXXL;
        }

      }
    }

    @each $breakpoint, $screenSize in $breakpoints {
      &-#{$breakpoint} {
        @each $widthLabel, $widthPercentageSM, $widthPercentageMD, $widthPercentageLG, $widthPercentageXL, $widthPercentageXXL, $ratioSM, $ratioMD, $ratioLG, $ratioXL, $ratioXXL, $moltiplicator in $boxWidth {
          &-#{$widthLabel} {
            @extend .box-#{$widthLabel};
            @media (min-width: #{$screenSize}) {
              flex-basis: calc($widthPercentageXXL + var(--gap-x) * $moltiplicator * -1); // NEW
              max-width: $widthPercentageXXL;
            }
          }
        }
      }
    }

  }
}

